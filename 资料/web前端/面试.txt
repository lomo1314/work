问事件冒泡和事件委托的应答
   
   事件冒泡分捕获阶段和冒泡阶段 然后说什么事冒泡阶段什么事捕获阶段  主要用在事件委托，事件委托的原理就是冒泡排序 把事件绑定在最外面的盒子通过判断不同的事件执行主体来
执行不同给的方法  捕获在DOM0级事件捕获不到，然后说DOM2级事件最后一个参数false就是冒泡阶段ture就是捕获阶段 然后说IE不能使用捕获阶段  延生到DOM2级事件的三大兼容性问题
够讲半小时

闭包的应答  常规的闭包是什么―――》距离说闭包的应用例如选项卡――――》异步编程，同步编程――――》那些事异步编程（事件和定时器）+ 异步编程的忧点

【所有的事件都是异步编程】 选项卡利用是点击事件绑定。解释：触发点击事件的时候，页面一定是加载完成的，所以这时候再点击事件， js代码一定是执行完成的，所以这个就是一个不同步的事件

[
    “同步模式”就是上一段的模式，后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的、同步的；
    “异步模式”则完全不同，每一个任务有一个或多个回调函数（callback），前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的。

    “异步模式”非常重要。在浏览器端，耗时很长的操作都应该异步执行，避免浏览器失去响应，最好的例子就是Ajax操作。在服务器端，“异步模式”甚至是唯一的模式，因为执行环境是单线程的，如果允许同步执行所有http请求，服务器性能会急剧下降，很快就会失去响应。]

当问到不会的时候说 这个我不太懂，不过我对HTTP挺了解我就说一下吧 http包括两大部分请求和响应 请求分为起始行 请求头 请求体。。。。。   把我给你们的笔记说一遍就唬住了


call和apply有且只有一个区别，就是在传递函数的参数值的时候，call是一个个的分别传递值，而apply语法要求，需要把传递的值放到一个数组中一起传递给函数，但是虽然是这样写，也相当于分别的给形参赋值


【异步通知：很简单，一旦设备准备好，就主动通知应用程序，这种情况下应用程序就不需要查询设备状态，这是不是特像硬件上常提的“中断的概念”。上边比较准确的说法其实应该叫做“信号驱动的异步I/O”,信号是在软件层次上对中断机制的一种模拟。
   阻塞I/O意味着一直等待设备可访问再访问，非阻塞I/O意味着使用poll()来查询是否可访问，而异步通知则意味着设备通知应用程序自身可访问。】
