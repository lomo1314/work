面试官：先自我介绍一下吧
开始：我叫王立军，来自安徽，从2014年7月到1月在江苏仕德伟做前端开发。其中我比较精通
原生JS，像面向对象开发就分为三大方面，
一类的封装 封装常见有3种 第一种就是单例模式，就是用一个对象把我们要用的元素和方法写在
          对象里，这种方法常用在模块化开发，因为多个同事之间合作写一个项目为了避免
          变量名和方法名的重复我们常用单例模式来工作。
          例如 obj={
          a:hello
          b:function(){}

          }(面试一般都在笔试后都有纸有笔)

          第二种 工厂模式 单例模式虽然解决了分组的作用,但是不能实现批量的生产,属于手工作业模式->"工厂模式"
                       把实现同一件事情的相同的代码放到一个函数中，以后如果在想实现这个功能，
                       不需要从新的编写这些代码来了，只需要执行当前的函数即可
                        -->"函数的封装" -->"低耦合高内聚":减少页面中的冗余代码,提高代码的重复利用率
                        重点要说我们在封装函数的原理就是不使用固定的函数执行主体，而是用this.

          第三种就是实例创建模式 实例创建封装的原理是函数的多面性，一个函数有三种形态，第一作为一个
                     普通函数可以执行，二作为一个类可在在其prototype（原型）上写一些公有方法
                     三作为一个对象也可存放一个方法和变量。
                     实例创建最经典的案例就是JQuery封装，

                         //1)jQuery是采用构造函数模式封装的,jQuery本身就是一个类
                         //2)在jQuery类的原型上定义了很多常用的方法,而且把jQuery作为普通的对象,
                         // 也给它增加了一些属性名和属性值
                         //3)$()->创建jQuery这个类的一个实例 所以它就可以调用原型上的方法执行了
                         //4)$.ajax() ->直接的执行在jQuery上定义的属性方法

                         //分析源码:
                         //    (function () {
                         //        var jQuery = function (selector, context) {
                         //            return new jQuery.fn.init(selector, context);
                         // ->在返回jQuery这个类的一个实例
                         //        };
                         //        jQuery.fn = jQuery.prototype = {
                         //      //我们学习的jQuery中常用的方法,大部分都是定义在jQuery类的原型上的公有的方法
                         //            addClass: function () {
                         //
                         //            }
                         //        };
                         //
                         //        jQuery.ajax = function () {
                         //            //把jQuery当做一个普通的对象,给它增加的私有的属性
                         //        };
                         //        window.jQuery = window.$ = jQuery;
                         //    })();
                         //    //jQuery();//->在实行上述的方法,返回一个jQuery这个类的实例
                         //    //$();//->和上面jQuery执行是一个意思
                         //
                         //    $();//->jQuery类库的选择器
                         // ->创建一个jQuery这个类的实例->这个实例就可以使用我们jQuery这个类原型上的方法了
                         //    $().addClass();
                         //    $.ajax();
                         参开20151222全日制第四周第一天 更高级的可以参考20151227jQuery周末班第二周


 面向对象开发之类的继承 五种继承 参考20151216补课 一定在面试官面前写代码把五种继承都写出来（特别强调中间类继承因为用到__proto__所以不兼容）


面向对象开发之类的多态  类的多态即重写与重载，
              重载在后台语言里是同一个方法名输入不同参数执行不同方法，但是在JS语言中没有重载因为相同的
              方法名 后面的方法会覆盖前面的函数
              例如 function fn（）{}；
                  function fn（）{}；
               后面一个方法会覆盖前面一个方法（此处可讲在全局作用域下预解释 即覆盖的原理）
               但是我们JS语言可以模仿重载
                   例如 function fn（）{
                   if（）{}
                   else if（）{}

                   }
                   这样在一个函数里通过if条件判断参数的类型然后执行不同给的方法


                  重写就是子类重写父类的方法（此处可在再带一下继承也可不说）


                面试官您好，这就是我的基本情况